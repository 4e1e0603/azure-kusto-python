[tool.poetry]
name = "azure-kusto-python"
version = "4.1.2"
description = ""
authors = ["AsafMah <asafmahlev@microsoft.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8.0"
azure-kusto-data = { path = "azure-kusto-data", develop = true, extras = ["pandas", "aio"] }
azure-kusto-ingest = { path = "azure-kusto-ingest", develop = true, extras = ["pandas", "aio"] }
azure-kusto-quick-start = { path = "quick_start", develop = true }
pyright = "^1.1.295"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
mock = "^5.0.1"
responses = "^0.22.0"
black = "^23.1.0"
aioresponses = "^0.7.4"
pytest-asyncio = "^0.20.3"
azure-storage-blob = "^12.15.0"
pandas = "^1.5.3"
asgiref = "^3.6.0"
poethepoet = "^0.18.1"
pre-commit = "^3.1.0"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 160

[tool.poe.tasks]
black = "black ."
black-check = "black --check --diff ."
pyright = "pyright"
build = [
    { ref = "do-parallel 'rm -rf dist'" },
    { ref = "do-parallel 'poetry build'" },
    { script = "fix_monorepo:main" },
]
test = "pytest"
test-e2e = "pytest -k 'E2E'"
test-no-e2e = "pytest -k 'not E2E'"
lint.ref = "black-check"
update = [
    { ref = "do-parallel 'poetry update'" },
    { shell = "poetry update" },
]

[tool.poe.tasks.version]
sequence = [
    { shell = "poetry version ${version}" },
    { ref = "do-parallel 'poetry version ${version}'" },
    { shell = "poetry update" },
    { ref = "do-parallel 'poetry update'" },
]
args = [{ name = "version", positional = true }]

[tool.poe.tasks.test-ci]
shell = """
    poetry run pytest -v . --junit-xml pytest.xml --cov=${output} --cov-report=xml
"""
args = [{ name = "output", positional = true }]

[tool.poe.tasks.do]
shell = """
    cd azure-kusto-data &&
    ${command} &&
    cd ../azure-kusto-ingest &&
    ${command} &&
    cd ../quick_start &&
    ${command} &&
    cd ..
"""
[tool.poe.tasks.do-parallel]
shell = """
    (cd azure-kusto-data && ${command}) &
    (cd azure-kusto-ingest && ${command}) &
    (cd quick_start && ${command}) &
    wait
"""


args = [{ name = "command", positional = true }]
