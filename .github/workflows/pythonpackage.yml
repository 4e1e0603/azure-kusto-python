# This workflow will install the dependencies, run tests and lint every push

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', "3.11" ]
    env:
      PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: lint
        run: poetry run poe lint

      - name: Test
        run: |
          poetry run poe test-ci /home/runner/.local/lib/python${{ matrix.python-version }}/site-packages/azure/kusto
        env:
          APP_ID: ${{ secrets.APP_ID }}
          APP_KEY: ${{ secrets.APP_KEY }}
          AUTH_ID: ${{ secrets.AUTH_ID }}
          TEST_DATABASE: ${{ secrets.TEST_DATABASE }}
          TEST_BLOB: ${{ secrets.TEST_BLOB }}
          ENGINE_CONNECTION_STRING: ${{ secrets.ENGINE_CONNECTION_STRING }}
          APPLICATION_INSIGHTS_ENGINE_CONNECTION_STRING: https://ade.applicationinsights.io/subscriptions/12534eb3-8109-4d84-83ad-576c0d5e1d06/resourcegroups/clients_e2e_test/providers/microsoft.insights/components/kusto-e2e-app-insights
          APPLICATION_INSIGHTS_TEST_DATABASE: kusto-e2e-app-insights

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest*.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          env_vars: PYTHON


  publish-test-results:
    name: "Publish Tests Results"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"
